<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Improving Data Workflows on menziess blog</title>
    <link>https://menziess.github.io/</link>
    <description>Recent content in Improving Data Workflows on menziess blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 28 Nov 2018 15:14:39 +1000</lastBuildDate>
    
	<atom:link href="https://menziess.github.io/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Use Functional Programming In Python</title>
      <link>https://menziess.github.io/howto/use/functional-programming-in-python/</link>
      <pubDate>Wed, 29 Apr 2020 00:00:00 +0100</pubDate>
      
      <guid>https://menziess.github.io/howto/use/functional-programming-in-python/</guid>
      <description>Although the official python documentation has dedicated an &lt;a href=&#34;https://docs.python.org/3.8/howto/functional.html&#34;&gt;in-depth document on Functional Programming&lt;/a&gt;, the community does not consider FP techniques best practice at all times Popular FP related functions have been moved to &lt;code&gt;functools&lt;/code&gt;. Still, FP concepts can be very helpful, and in this post I will demonstrate some &amp;lsquo;Functional Programming&amp;rsquo;-related concepts, using python.</description>
    </item>
    
    <item>
      <title>Enhance Your Databricks Workflow</title>
      <link>https://menziess.github.io/howto/enhance/your-databricks-workflow/</link>
      <pubDate>Sun, 01 Mar 2020 07:15:38 +0100</pubDate>
      
      <guid>https://menziess.github.io/howto/enhance/your-databricks-workflow/</guid>
      <description>With databricks-connect you can connect your favorite IDE to your Databricks cluster. This means that you can now lint, test, and package the code that you want to run on Databricks more easily:</description>
    </item>
    
    <item>
      <title>Create Python Packages</title>
      <link>https://menziess.github.io/howto/create/python-packages/</link>
      <pubDate>Tue, 11 Feb 2020 07:15:38 +0100</pubDate>
      
      <guid>https://menziess.github.io/howto/create/python-packages/</guid>
      <description>Why should you care about creating packages? Packages are easy to install (&lt;code&gt;pip install demo&lt;/code&gt;). Packages simplify development (&lt;code&gt;pip install -e .&lt;/code&gt; installs your package and keeps it up-to-date during development). Packages are easy to run and test &amp;hellip;</description>
    </item>
    
    <item>
      <title>Enhance Your Python-vscode Workflow</title>
      <link>https://menziess.github.io/howto/enhance/your-python-vscode-workflow/</link>
      <pubDate>Mon, 10 Feb 2020 07:15:38 +0100</pubDate>
      
      <guid>https://menziess.github.io/howto/enhance/your-python-vscode-workflow/</guid>
      <description>This post covers my personal workflow for python projects, using Visual Studio Code along with some other tools. A good workflow saves time and allows you to focus on the problem at hand, instead of tasks that make you feel like a robot (machines are good for that).</description>
    </item>
    
    <item>
      <title>Install databricks-connect</title>
      <link>https://menziess.github.io/howto/install/databricks-connect/</link>
      <pubDate>Mon, 10 Feb 2020 07:15:38 +0100</pubDate>
      
      <guid>https://menziess.github.io/howto/install/databricks-connect/</guid>
      <description>Databricks-connect allows you to connect your favorite IDE to your Databricks cluster. Install Java on your local machine. Uninstall any pyspark versions, and install databricks-connect using the regular &lt;code&gt;pip&lt;/code&gt; commands, preventing any changes to be recorded to your virtual environment (prevents mutations to &lt;code&gt;Pipfile&lt;/code&gt; and &lt;code&gt;Pipfile.lock&lt;/code&gt;).</description>
    </item>
    
    <item>
      <title>Install Windows Subsystem for Linux</title>
      <link>https://menziess.github.io/howto/install/windows-subsystem-for-linux/</link>
      <pubDate>Mon, 10 Feb 2020 07:15:38 +0100</pubDate>
      
      <guid>https://menziess.github.io/howto/install/windows-subsystem-for-linux/</guid>
      <description>If you&amp;rsquo;re accustomed to using a unix shell as your command-line interface, you may end up being very unproductive using Windows 10.
Microsoft (in collaboration with Canonical) has made a tremendous effort into closing the gap between Linux and Windows developers by creating a kernel compatibility layer based on Ubuntu.</description>
    </item>
    
    <item>
      <title>Test Python Code</title>
      <link>https://menziess.github.io/howto/test/python-code/</link>
      <pubDate>Wed, 05 Feb 2020 09:39:35 +0100</pubDate>
      
      <guid>https://menziess.github.io/howto/test/python-code/</guid>
      <description>Writing unit tests should an integral part of delivering software for every developer. Whenever a piece of code is changed, it has the potential to break all other parts. The broken parts can even be discovered in a far later stage, having caused potential damage that is hard to restore.</description>
    </item>
    
    <item>
      <title>Test Code in Databricks Notebooks</title>
      <link>https://menziess.github.io/howto/test/code-in-databricks-notebooks/</link>
      <pubDate>Mon, 03 Feb 2020 20:49:01 +0100</pubDate>
      
      <guid>https://menziess.github.io/howto/test/code-in-databricks-notebooks/</guid>
      <description>Companies hire developers to write spark applications &amp;ndash; using expensive Databricks clusters &amp;ndash; transforming and delivering business-critical data to the end user. It is advised to properly test your software: &lt;a href=&#34;https://menziess.github.io/howto/enhance/your-databricks-workflow&#34;&gt;enhance your databricks workflow&lt;/a&gt;. But if there is no time to set up proper package testing, there is always the hacker way of running tests right inside of Databricks notebooks.</description>
    </item>
    
    <item>
      <title>Manage Virtual Environments</title>
      <link>https://menziess.github.io/howto/manage/virtual-environments/</link>
      <pubDate>Mon, 03 Feb 2020 10:00:13 +0100</pubDate>
      
      <guid>https://menziess.github.io/howto/manage/virtual-environments/</guid>
      <description>In this post we will take a look at using Pipenv, a dependency manager for python, to boost your python workflow. A virtual environment is an isolated environment in which dependencies for a python project are contained.</description>
    </item>
    
    <item>
      <title>Manage Python Versions</title>
      <link>https://menziess.github.io/howto/manage/python-versions/</link>
      <pubDate>Mon, 03 Feb 2020 09:17:11 +0100</pubDate>
      
      <guid>https://menziess.github.io/howto/manage/python-versions/</guid>
      <description>This will be a micro-post talking about managing multiple python versions on your machine, using a tool called Pyenv. Depending on your operating system, it may be quite a hassle uninstalling and installing different python versions.</description>
    </item>
    
    <item>
      <title>Create a Blog</title>
      <link>https://menziess.github.io/howto/create/a-blog/</link>
      <pubDate>Sun, 02 Feb 2020 23:31:52 +0100</pubDate>
      
      <guid>https://menziess.github.io/howto/create/a-blog/</guid>
      <description>In this post I will walk you through all the steps that I&amp;rsquo;ve taken to create and publish this static blog website using &lt;a href=&#34;https://gohugo.io/&#34;&gt;Hugo&lt;/a&gt; and &lt;a href=&#34;https://pages.github.com/&#34;&gt;github pages&lt;/a&gt;.</description>
    </item>
    
  </channel>
</rss>